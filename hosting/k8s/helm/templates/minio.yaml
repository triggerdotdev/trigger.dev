{{- if .Values.minio.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "trigger-v4.fullname" . }}-minio
  labels:
    {{- $component := "minio" }}
    {{- include "trigger-v4.componentLabels" (dict "Chart" .Chart "Release" .Release "Values" .Values "component" $component) | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "trigger-v4.fullname" . }}-minio-headless
  selector:
    matchLabels:
      {{- include "trigger-v4.componentSelectorLabels" (dict "Chart" .Chart "Release" .Release "Values" .Values "component" $component) | nindent 6 }}
  template:
    metadata:
      {{- with .Values.minio.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "trigger-v4.componentSelectorLabels" (dict "Chart" .Chart "Release" .Release "Values" .Values "component" $component) | nindent 8 }}
    spec:
      {{- with .Values.minio.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: minio
          {{- with .Values.minio.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.minio.image.registry }}/{{ .Values.minio.image.repository }}:{{ .Values.minio.image.tag }}"
          imagePullPolicy: {{ .Values.minio.image.pullPolicy }}
          args:
            - server
            - --console-address
            - ":9001"
            - /data
          ports:
            - name: api
              containerPort: {{ .Values.minio.service.ports.api }}
              protocol: TCP
            - name: console
              containerPort: {{ .Values.minio.service.ports.console }}
              protocol: TCP
          env:
            - name: MINIO_ROOT_USER
              value: {{ .Values.minio.auth.rootUser | quote }}
            - name: MINIO_ROOT_PASSWORD
              value: {{ .Values.minio.auth.rootPassword | quote }}
            {{- with .Values.minio.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: api
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /minio/health/live
              port: api
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 10
            failureThreshold: 5
          resources:
            {{- toYaml .Values.minio.resources | nindent 12 }}
          volumeMounts:
            - name: minio-data
              mountPath: /data
  {{- if not .Values.minio.persistence.enabled }}
      volumes:
        - name: minio-data
          emptyDir: {}
  {{- end }}
  {{- if .Values.minio.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: minio-data
        labels:
          {{- $component := "minio" }}
          {{- include "trigger-v4.componentLabels" (dict "Chart" .Chart "Release" .Release "Values" .Values "component" $component) | nindent 10 }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.minio.persistence.size }}
        {{- $storageClass := .Values.minio.persistence.storageClass | default .Values.global.storageClass }}
        {{- if $storageClass }}
        storageClassName: {{ $storageClass | quote }}
        {{- end }}
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "trigger-v4.fullname" . }}-minio-headless
  labels:
    {{- $component := "minio" }}
    {{- include "trigger-v4.componentLabels" (dict "Chart" .Chart "Release" .Release "Values" .Values "component" $component) | nindent 4 }}
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: api
      port: {{ .Values.minio.service.ports.api }}
      targetPort: api
      protocol: TCP
    - name: console
      port: {{ .Values.minio.service.ports.console }}
      targetPort: console
      protocol: TCP
  selector:
    {{- include "trigger-v4.componentSelectorLabels" (dict "Chart" .Chart "Release" .Release "Values" .Values "component" $component) | nindent 4 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "trigger-v4.fullname" . }}-minio
  labels:
    {{- $component := "minio" }}
    {{- include "trigger-v4.componentLabels" (dict "Chart" .Chart "Release" .Release "Values" .Values "component" $component) | nindent 4 }}
spec:
  type: {{ .Values.minio.service.type }}
  ports:
    - name: api
      port: {{ .Values.minio.service.ports.api }}
      targetPort: api
      protocol: TCP
    - name: console
      port: {{ .Values.minio.service.ports.console }}
      targetPort: console
      protocol: TCP
  selector:
    {{- include "trigger-v4.componentSelectorLabels" (dict "Chart" .Chart "Release" .Release "Values" .Values "component" $component) | nindent 4 }}
{{- end }}