{{- if and .Values.registry.deploy .Values.registry.ingress.enabled -}}
{{- $fullName := include "trigger-v4.fullname" . -}}
{{- $svcPort := .Values.registry.service.port -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}-registry
  labels:
    {{- $component := "registry" }}
    {{- include "trigger-v4.componentLabels" (dict "Chart" .Chart "Release" .Release "Values" .Values "component" $component) | nindent 4 }}
  annotations:
    {{- include "trigger-v4.registry.ingress.annotations" . | nindent 4 }}
spec:
  {{- if .Values.registry.ingress.className }}
  ingressClassName: {{ .Values.registry.ingress.className }}
  {{- end }}
  {{- if .Values.registry.ingress.tls }}
  tls:
    {{- range .Values.registry.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.registry.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- if .paths }}
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType | default "Prefix" }}
            backend:
              service:
                name: {{ $fullName }}-registry
                port:
                  number: {{ $svcPort }}
          {{- end }}
          {{- else }}
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ $fullName }}-registry
                port:
                  number: {{ $svcPort }}
          {{- end }}
    {{- end }}
{{- end }}