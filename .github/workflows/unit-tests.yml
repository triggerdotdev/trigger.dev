name: "🧪 Unit Tests"

permissions:
  contents: read

on:
  workflow_call:
  push:

jobs:
  unitTests:
    name: "🧪 Unit Tests"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shardIndex: [1, 2, 3, 4, 5]
        shardTotal: [5]
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      SHARD_INDEX: ${{ matrix.shardIndex }}
      SHARD_TOTAL: ${{ matrix.shardTotal }}
    steps:
      - name: 🔧 Disable IPv6
        run: |
          sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1
          sudo sysctl -w net.ipv6.conf.default.disable_ipv6=1
          sudo sysctl -w net.ipv6.conf.lo.disable_ipv6=1

      - name: 🔧 Configure docker address pool
        run: |
          CONFIG='{
            "default-address-pools" : [
              {
                "base" : "172.17.0.0/12",
                "size" : 20
              },
              {
                "base" : "192.168.0.0/16",
                "size" : 24
              }
            ]
          }'
          mkdir -p /etc/docker
          echo "$CONFIG" | sudo tee /etc/docker/daemon.json

      - name: 🔧 Restart docker daemon
        run: sudo systemctl restart docker

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⎔ Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.5

      - name: ⎔ Setup node
        uses: buildjet/setup-node@v4
        with:
          node-version: 20.11.1
          cache: "pnpm"

      # ..to avoid rate limits when pulling images
      - name: 🐳 Login to DockerHub
        if: ${{ env.DOCKERHUB_USERNAME }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: 🐳 Skipping DockerHub login (no secrets available)
        if: ${{ !env.DOCKERHUB_USERNAME }}
        run: echo "DockerHub login skipped because secrets are not available."

      - name: 📥 Download deps
        run: pnpm install --frozen-lockfile

      - name: 📀 Generate Prisma Client
        run: pnpm run generate

      - name: 🧪 Run Webapp Unit Tests
        run: pnpm run test:webapp -- --reporter=blob --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
          DIRECT_URL: postgresql://postgres:postgres@localhost:5432/postgres
          SESSION_SECRET: "secret"
          MAGIC_LINK_SECRET: "secret"
          ENCRYPTION_KEY: "secret"
      
      - name: 🧪 Run Package Unit Tests
        run: pnpm run test:packages -- --reporter=blob --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
      
      - name: 🧪 Run Internal Unit Tests
        run: pnpm run test:internal -- --reporter=blob --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

      - name: Upload blob report to GitHub Actions Artifacts
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: .vitest-reports/*
          include-hidden-files: true
          retention-days: 1

  merge-reports:
    if: ${{ !cancelled() }}
    needs: [unitTests]
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⎔ Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.5

      - name: ⎔ Setup node
        uses: buildjet/setup-node@v4
        with:
          node-version: 20.11.1
          cache: "pnpm"

      - name: 📥 Download deps
        run: pnpm install --frozen-lockfile

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: .vitest-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge reports
        run: npx vitest --merge-reports
