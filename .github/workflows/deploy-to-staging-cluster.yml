name: trigger platform staging deployment

on:
  push:
    branches:
      - staging
    # paths:
    #   - "helm-charts/**"
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  packages: write

env:
  KUBERNETES_VERSION: 1.26.0
  HELM_CHART_PATH: helm-charts
  K8S_VERSION: "1.28.0"
  HELM_VERSION: 3.8.1
  GO_VERSION: 1.21.x

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      working-directory: .
      cluster: ${{ secrets.STAGING_CLUSTER_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Add Helm repositories
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update

      - name: Configure Kubernetes context
        run: |
          doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.cluster }}
      - name: Delete existing ingress-nginx release
        run: |
          if helm list -n ingress-nginx | grep -q "ingress-nginx"; then
            echo "Deleting existing ingress-nginx release..."
            helm uninstall ingress-nginx -n ingress-nginx
          else
            echo "No existing ingress-nginx release found."
          fi

      - name: Wait for resources to be removed
        run: |
          echo "Waiting for ingress-nginx resources to be fully removed..."
          sleep 30
      - name: Create trigger namespace
        run: |
          kubectl create namespace trigger --dry-run=client -o yaml | kubectl apply -f -

      - name: Build Helm dependencies
        working-directory: ${{env.working-directory}}
        run: |
          helm dependency build ./helm-charts

      - name: Deploy To Staging Environment
        working-directory: ${{env.working-directory}}
        run: |
          helm upgrade --install trigger ./helm-charts \
            --values ./helm-charts/values.staging.yaml \
            --set solomon.database.url="${{ secrets.TRIGGER_DEV_DB_STAGING_URL }}" \
            --set ingress.ingressClassName=nginx \
            --set ingress.nginx.enabled=false \
            --set ingress.enabled=false \
            --set trigger.env.LOGIN_ORIGIN="${{ secrets.STAGING_TRIGGER_LOGIN_ORIGIN }}" \
            --set trigger.env.APP_ORIGIN="${{ secrets.STAGING_TRIGGER_LOGIN_ORIGIN }}" \
            --set trigger.env.RESEND_API_KEY="${{ secrets.RESEND_API_KEY }}" \
            --set trigger.env.AUTH_GITHUB_CLIENT_ID="${{ secrets.AUTH_GITHUB_CLIENT_ID }}" \
            --set trigger.env.AUTH_GITHUB_CLIENT_SECRET="${{ secrets.AUTH_GITHUB_CLIENT_SECRET }}" \
            --namespace trigger \
            --create-namespace \
            --debug

      - name: Verify deployment
        run: |
          kubectl get pods -n trigger
          kubectl get ingress -n trigger
          kubectl get services -n trigger

      - name: Display Ingress details
        run: |
          kubectl get ingress -n trigger -o yaml

      - name: Temporarily disable webhook (if all else fails)
        if: failure()
        run: |
          echo "Warning: Temporarily disabling Ingress Nginx admission webhook. This is not recommended for production."
          kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission
          
          helm upgrade --install trigger ./helm-charts \
            --values ./helm-charts/values.staging.yaml \
            --set solomon.database.url="${{ secrets.TRIGGER_DEV_DB_STAGING_URL }}" \
            --set ingress.ingressClassName=trigger-nginx  \
            --set ingress.nginx.enabled=false \
            --set ingress.enabled=false \
            --namespace trigger \
            --create-namespace \
            --debug