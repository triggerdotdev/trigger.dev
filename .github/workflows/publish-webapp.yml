name: "üê≥ Publish Webapp"

permissions:
  contents: read
  packages: write
  id-token: write

on:
  workflow_call:
    inputs:
      image_tag:
        description: The image tag to publish
        type: string
        required: false
        default: ""

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      PRISMA_ENGINES_CHECKSUM_IGNORE_MISSING: 1
    outputs:
      version: ${{ steps.get_tag.outputs.tag }}
      short_sha: ${{ steps.get_commit.outputs.sha_short }}
    steps:
      - name: üè≠ Setup Depot CLI
        uses: depot/setup-action@v1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: "#Ô∏è‚É£ Get the image tag"
        id: get_tag
        uses: ./.github/actions/get-image-tag
        with:
          tag: ${{ inputs.image_tag }}

      - name: üî¢ Get the commit hash
        id: get_commit
        run: |
          echo "sha_short=$(echo ${{ github.sha }} | cut -c1-7)" >> "$GITHUB_OUTPUT"

      - name: üìõ Set the tags
        id: set_tags
        run: |
          ref_without_tag=ghcr.io/triggerdotdev/trigger.dev
          image_tags=$ref_without_tag:${{ steps.get_tag.outputs.tag }}

          # if tag is a semver, also tag it as v4
          if [[ "${{ steps.get_tag.outputs.is_semver }}" == true ]]; then
            # TODO: switch to v4 tag on GA
            image_tags=$image_tags,$ref_without_tag:v4-beta
          fi

          echo "image_tags=${image_tags}" >> "$GITHUB_OUTPUT"

      - name: üìù Set the build info
        id: set_build_info
        run: |
          tag=${{ steps.get_tag.outputs.tag }}
          if [[ "${{ steps.get_tag.outputs.is_semver }}" == true ]]; then
            echo "BUILD_APP_VERSION=${tag}" >> "$GITHUB_OUTPUT"
          fi
          echo "BUILD_GIT_SHA=${{ github.sha }}" >> "$GITHUB_OUTPUT"
          echo "BUILD_GIT_REF_NAME=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
          echo "BUILD_TIMESTAMP_SECONDS=$(date +%s)" >> "$GITHUB_OUTPUT"

      - name: üêô Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üê≥ Build image and push to GitHub Container Registry
        uses: depot/build-push-action@v1
        with:
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.set_tags.outputs.image_tags }}
          push: true
          build-args: |
            BUILD_APP_VERSION=${{ steps.set_build_info.outputs.BUILD_APP_VERSION }}
            BUILD_GIT_SHA=${{ steps.set_build_info.outputs.BUILD_GIT_SHA }}
            BUILD_GIT_REF_NAME=${{ steps.set_build_info.outputs.BUILD_GIT_REF_NAME }}
            BUILD_TIMESTAMP_SECONDS=${{ steps.set_build_info.outputs.BUILD_TIMESTAMP_SECONDS }}
